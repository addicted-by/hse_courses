% start S
# Grammar Rules
S[SEM = <app(?subj,?vp)>] -> NP[NUM=?n,SEM=?subj] VP[NUM=?n,SEM=?vp]
NP[NUM=?n,SEM=<app(?det,?nom)> ] -> Det[NUM=?n,SEM=?det]  Nom[NUM=?n,SEM=?nom]
NP[LOC=?l,NUM=?n,SEM=?np] -> PropN[LOC=?l,NUM=?n,SEM=?np]
Nom[SEM=<app(?adj, ?np)>] -> Adj[SEM=?adj]  PropN[LOC=?l,NUM=?n,SEM=?np]
# Nom[SEM=<app(?adj, ?nom)>] -> Adj[SEM=?adj]  N[NUM=?n,SEM=?nom]
Nom[NUM=?n,SEM=?nom] -> N[NUM=?n,SEM=?nom]
Nom[NUM=?n,SEM=<app(?pp,?nom)>] -> N[NUM=?n,SEM=?nom] PP[SEM=?pp]

VP[NUM=?n,SEM=<app(?v,?obj)>] -> TV[NUM=?n,SEM=?v] NP[SEM=?obj]
VP[NUM=?n,SEM=?v] -> IV[NUM=?n,SEM=?v]
VP[NUM=?n,SEM=<app(?pp,?vp)>] -> VP[NUM=?n,SEM=?vp] PP[-PRED,SEM=?pp]
PP[LOC=?l,PRED=?prd,SEM=<app(?p,?np)>] -> P[LOC=?l,PRED=?prd,SEM=?p] NP[LOC=?l,SEM=?np]
PP[LOC=?l,PRED=?prd,SEM=?pp] -> 'after' NP[LOC=?l,SEM=?np, PRED=?pred]
PP[LOC=?l,PRED=?prd,SEM=?pp] -> 'into' NP[LOC=?l,SEM=?np, PRED=?pred]
PP[LOC=?l,PRED=?prd,SEM=?pp] -> 'of' NP[LOC=?l,SEM=?np, PRED=?pred]

NP[LOC=?l,NUM=?n,SEM=<app(?det,?nom)> , PRED=?pred] -> Det[NUM=?n,SEM=?det]

# Lexical Rules
PropN[-LOC,NUM=sg,SEM=<\P.(DRS([x],[mouse(x)])+P(x))>] -> 'mouse'
PropN[-LOC,NUM=sg,SEM=<\P.(DRS([x],[kitten(x)])+P(x))>] -> 'kitten'
PropN[-LOC,NUM=sg,SEM=<\P.(DRS([x],[PRO(x)])+P(x))>] -> 'it'

Det[NUM=sg,SEM=<\P Q.((DRS([x],[])+P(x))+Q(x))>] -> 'a' | 'A'
Det[NUM=sg,SEM=<\P Q.((DRS([x],[])+P(x))+Q(x))>] -> 'the' | 'The'

N[NUM=sg,SEM=<\x.DRS([],[kitten(x)])>] -> 'kitten'
N[NUM=sg,SEM=<\x.DRS([],[mouse(x)])>] -> 'mouse' 
N[NUM=sg,SEM=<\x.DRS([],[jar(x)])>] -> 'jar'

Adj[SEM=<\P.(DRS([x],[black(x)])+P(x))>] -> 'black'
Adj[SEM=<\P.(DRS([x],[white(x)])+P(x))>] -> 'white'

TV[NUM=sg,SEM=<\X x.X(\y.DRS([],[followed(x,y)]))>,tns=past] -> 'followed'
TV[NUM=sg,SEM=<\X x.X(\y.DRS([],[saw(x,y)]))>,tns=past] -> 'saw'

IV[NUM=sg,SEM=<\x.DRS([],[rushed(x)])>,tns=past] -> 'rushed'
IV[NUM=sg,SEM=<\x.DRS([],[jumped(x)])>,tns=past] -> 'jumped'

IV[NUM=sg,SEM=<\x.DRS([],[got_out(x)])>,tns=past] -> 'got' 'out'
IV[NUM=sg,SEM=<\x.DRS([],[ran_away(x)])>,tns=past] -> 'ran' 'away'


P[LOC=?l,PRED=<\x y.(DRS([], [after(x, y)]))>,SEM=<\x y.after(x, y)>] -> 'after'
P[LOC=?l,PRED=<\x y.(DRS([], [into(x, y)]))>,SEM=<\x y.into(x, y)>] -> 'into'
P[LOC=?l,PRED=<\x y.(DRS([], [of(x, y)]))>,SEM=<\x y.of(x, y)>] -> 'of'


